#=================================================  
# https://github.com/somemoo/OpenWrt  
# 描述: 使用 GitHub Actions 构建 OpenWrt  
# 许可证: MIT  
# 作者: vison.v   
#=================================================  

name: Debug

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  SCKEY: ${{ secrets.SCKEY }}
  PAT: ${{ secrets.PAT }}
  TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

jobs:
  build_openwrt:
    if: github.event.repository.owner.id == github.event.sender.id || !github.event.sender.id
    runs-on: ubuntu-latest
    name: Debug
    strategy:
      fail-fast: false

    steps:
      - name: 检出代码
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: 配置变量
        run: |
          echo "date=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV
          echo "LOG=true" >> $GITHUB_ENV

      - name: 消息通知
        if: always()
        run: |
          if [ "${{ env.LOG }}" = "true" ]; then
            LOG_FILE="ConfiguCollected errors:<br>* check_data_file_clashes: Package luci-app-socat wants to install file /home/runner/work/OpenWrt/OpenWrt/OpenWrt/build_dir/target-x86_64_musl/root-x86/etc/config/socat<br> \But that file is already provided by package  * socat<br>查看完整日志请下载Artifacts"
            #ERROR_LOG=$(tail -n 10 "$LOG_FILE" | sed 's/"/\\"/g; s/$/\\n/')
            MSG_TITLE="❌ 固件 ${{ matrix.target }} 编译失败"  
            WMSG_CONTENT="失败信息摘要：\n📅编译日期：${{ env.date }}\n<details><summary>错误日志:</summary><pre>${LOG_FILE}</pre></details>\n📝查看完整日志请下载Artifacts"
          else  
            MSG_TITLE="✅ 固件 ${{ matrix.target }} 编译完成"  
            RELEASE_URL="${{ steps.uprelease.outputs.url }}"
            WMSG_CONTENT="构建信息摘要：\\n📅编译日期：${{ env.date }}\\n🔧生成目标：${{ matrix.target }}\\n📥下载地址：<a href=\\\"${RELEASE_URL}\\\">${{ matrix.target }}-${{ env.REPO_BRANCH }}</a>"
          fi  
          
          # PushPlus 通知
          if [ -n "${{ secrets.PUSHPLUS_TOKEN }}" ]; then
            echo "$WMSG_CONTENT"
            curl -X POST \
              -H "Content-Type: application/json" \
              -d "{ \
                \"token\": \"${{ secrets.PUSHPLUS_TOKEN }}\", \
                \"title\": \"$MSG_TITLE\", \
                \"content\": \"$(echo -e $WMSG_CONTENT)\" \
              }" \
              http://www.pushplus.plus/send  
          fi
