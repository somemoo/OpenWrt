#=================================================  
on:   
  workflow_dispatch:  
  # schedule:  
  #   - cron: "5 23 1/2 * *"  

permissions:  
  contents: read  

env:  
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}  
  SCKEY: ${{ secrets.SCKEY }}  
  PAT: ${{ secrets.PAT }}  
  TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}  
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}  
  TZ: Asia/Shanghai  

jobs:  
  build_openwrt:  
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id  
    runs-on: ubuntu-latest  
    
    name: Debug测试   
    strategy:  
      fail-fast: false  
        
    steps:  
      - name: 检出代码  
        uses: actions/checkout@v2  # Updated to a stable version  
        with:  
          fetch-depth: 0  

      # - name: SSH connection to Actions  
      #   uses: kiddin9/debugger-action@master  

      - name: 定义环境  
        if: always()  
        run: echo "LOG=true" >> $GITHUB_ENV  

      - name: 消息通知  
        if: always()  
        run: |  
          # 通用消息模板构建  
          if [ "$LOG" = "true" ]; then  
            ERROR_LOG=$(cat firmware/${{ matrix.target }}_make_error.log | sed 's/</\&lt;/g; s/>/\&gt;/g')  
            # 微信通知使用Markdown格式换行符  
            WECHAT_MSG="⚠️ 编译失败！\n\n🔧 目标：${{ matrix.target }}\n\n错误日志：\n${ERROR_LOG}\n\n查看完整日志请下载Artifacts"  
            # Telegram使用HTML标签换行  
            TG_MSG="<b>⚠️ 编译失败！</b>\n\n🔧 目标：${{ matrix.target }}\n\n<pre>错误日志：\n${ERROR_LOG}</pre>\n\n查看完整日志请下载Artifacts"  
            TITLE="❌ 固件 ${{ env.date }}-${{ matrix.target }} 编译失败"  
          else  
            # 微信通知使用Markdown格式换行符  
            WECHAT_MSG="🎉 编译成功！\n\n📅 日期：${{ env.date }}\n🔧 目标：${{ matrix.target }}\n🚀 已上传到 Release"  
            # Telegram使用HTML标签换行  
            TG_MSG="<b>🎉 编译成功！</b>\n\n📅 日期：${{ env.date }}\n🔧 目标：${{ matrix.target }}\n🚀 已上传到 Release"  
            TITLE="✅ 固件 ${{ env.date }}-${{ matrix.target }} 编译完成"  
          fi  

          # Server酱通知（使用Markdown格式）  
          if [ -n "$SCKEY" ]; then  
            curl -X POST \
              -d "title=${TITLE}" \
              -d "desp=${WECHAT_MSG//\n/%0A}" \  # 显式转换换行符为URL编码  
              "https://sctapi.ftqq.com/$SCKEY.send"  
          fi  

          # Telegram通知（使用HTML格式）  
          if [ -n "$TELEGRAM_TOKEN" ]; then  
            # 替换换行符为HTML标签  
            TG_MSG=${TG_MSG//\n/%0A}  
            TG_MSG=${TG_MSG//\n/<br>}  
            curl -s -k \
              --data-urlencode "chat_id=$TELEGRAM_CHAT_ID" \
              --data-urlencode "text=<b>${TITLE}</b>%0A${TG_MSG}" \
              --data-urlencode "parse_mode=HTML" \
              --data-urlencode "disable_web_page_preview=true" \
              "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage"  
          fi
