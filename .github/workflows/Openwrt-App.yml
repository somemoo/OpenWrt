name: Build-App  

on:   
  #schedule:  
  #  - cron: "5 0 * * *"  
  workflow_dispatch:  
  
env:
  TZ: Asia/Shanghai  

jobs:  
  build:  
    runs-on: ubuntu-latest  
    if: github.event.repository.owner.id == github.event.sender.id || !github.event.sender.id  
    
    name: Build ${{ matrix.target }} (${{ matrix.arch }})
    strategy:  
      fail-fast: false  
      matrix:  
        target: [luci-app-oaf]
        arch: ['x86/64', 'ipq40xx/generic']
        
    steps:  
    - name: Checkout  
      uses: actions/checkout@main  
      
    - name: 加载环境  
      env:  
        DEBIAN_FRONTEND: noninteractive  
      run: |  
        sudo -E apt-get -qq update  
        sudo -E apt-get -qq install build-essential clang llvm flex g++ gawk gcc-multilib gettext \
        git libncurses5-dev libssl-dev python3 python3-pyelftools python3-setuptools \
        libpython3-dev rsync unzip zlib1g-dev swig aria2 jq subversion qemu-utils ccache rename \
        libelf-dev device-tree-compiler libgnutls28-dev coccinelle libgmp3-dev libmpc-dev  
        sudo -E apt-get -qq purge azure-cli ghc* zulu* firefox powershell openjdk* dotnet* google* mysql* php* android*  
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc  
        sudo -E apt-get -qq autoremove --purge  
        sudo -E apt-get -qq clean  
        sudo timedatectl set-timezone "Asia/Shanghai"  
        git clone --depth=1 https://github.com/openwrt-dev/po2lmo  
        (cd po2lmo && sudo make && sudo make install) 
    
    - name: 设置变量  
      id: ENV  
      run: |  
        echo "date=$(date +'%m.%d')" >> $GITHUB_ENV  
        echo "arch_path=$(echo ${{ matrix.arch }} | sed 's/\//-/g')" >> $GITHUB_ENV
      
    - name: 准备SDK  
      run: |  
        SDK_URL="https://downloads.immortalwrt.org/releases/23.05-SNAPSHOT/targets/${{ matrix.arch }}/immortalwrt-sdk-23.05-SNAPSHOT-${{ env.arch_path }}_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
        wget $SDK_URL
        mkdir OpenWrt-${{ env.arch_path }} && tar xf immortalwrt-*.xz && rm immortalwrt-*.xz  
        mv immortalwrt-*/* OpenWrt-${{ env.arch_path }} && rm -rf immortalwrt-*  
    
    - name: 克隆项目  
      run: |  
        cp -rf App/. OpenWrt-${{ env.arch_path }}/  
        cd OpenWrt-${{ env.arch_path }}  
        ./scripts/feeds update -a && rm -rf feeds/luci/applications/luci-app-*  
        git clone -b lede https://github.com/somemoo/OpenWrt-packages packages && mv -n packages/* package && rm -rf {packages,package/golang}  
        ./scripts/feeds install ${{ matrix.target }}  
        
        if [ -f "${{ matrix.target }}" ]; then  
          chmod +x "${{ matrix.target }}"  
          /bin/bash ./"${{ matrix.target }}"  
        else  
          echo "${{ matrix.target }} 文件不存在，无法执行。"  
        fi  
        echo "CONFIG_PACKAGE_${{ matrix.target }}=y" >> .config  
    
    - name: 下载依赖  
      id: package  
      run: |  
        cd OpenWrt-${{ env.arch_path }}  
        make defconfig  
        make -j$(nproc) download  
        
    - name: 开始编译  
      run: |   
        cd OpenWrt-${{ env.arch_path }}  
        make package/${{ matrix.target }}/compile -j$(nproc) V=s  
        
    - name: 准备 ipk  
      run: |  
        cd OpenWrt-${{ env.arch_path }}  
        mkdir -p ./artifact/IPK  
        find ./bin/packages/*/*/ -maxdepth 1 -type f -name "*.ipk" | xargs -i mv -f {} ./artifact/IPK/  
        cd ./artifact/IPK  
        echo "IPK=$PWD" >> $GITHUB_ENV  
        echo "ARCH_NAME=${{ env.arch_path }}" >> $GITHUB_ENV
        
    - name: 上传 ipk  
      uses: actions/upload-artifact@v4  
      id: upipk  
      with:  
        name: ${{ env.date }} (${{ env.ARCH_NAME }})-${{ matrix.target }}
        path: ${{ env.IPK }}/
