#=================================================  
# https://github.com/somemoo/OpenWrt  
# 描述: 可选单架构构建多个IPK（一个或多个仓库）
# 许可证: MIT  
# 作者: vison.v   
#================================================= 

name: Openwrt-AppBuild

on:   
  #schedule:  
  #  - cron: "5 20 1/10 * *" 
  workflow_dispatch:
    inputs:
      Arch:
        description: '选择架构'
        default: '["x86/64"]'
        type: choice
        options: ['ipq40xx/generic', 'ramips/mt7621', 'ath79/generic', 'sunxi/cortexa7', 'bcm27xx/bcm2711', 'mediatek/mt7622', 'ar71xx/generic', 'lantiq/xrx200', 'rockchip/armv8', 'mvebu/cortexa9', 'realtek/rtl838x', 'armvirt/64', 'oxnas/generic', 'brcm47xx/generic', 'ipq806x/generic', 'zynq/mpsoc']
  
env:
  TZ: Asia/Shanghai

jobs:  
  matrix:  
    runs-on: ubuntu-latest  
    if: github.event.repository.owner.id == github.event.sender.id || !github.event.sender.id   
    outputs:  
      matrix: ${{ steps.set-matrix.outputs.matrix }}  
    steps:  
      - name: 检出代码  
        uses: actions/checkout@v4  

      - name: 构建矩阵  
        id: set-matrix  
        run: |  
          git clone -b lede --single-branch https://github.com/somemoo/OpenWrt-packages.git  
          cd OpenWrt-packages  
          targets=$(find . -maxdepth 1 -type d -name 'luci-app-*' \
            -not -name 'luci-app-smartdns' \
            -not -name 'luci-app-oaf' \
            -not -name 'luci-app-bypass' \
            -not -name 'luci-app-ssr-plus' \
            -printf '%f\n' | jq -R -s -c 'split("\n") | map(select(. != ""))')
          echo "matrix=${targets}" >> $GITHUB_OUTPUT
          cd ..  
          rm -rf OpenWrt-packages  

  build:  
    name: 构建 ${{ matrix.target }}-(${{ matrix.arch }})  
    runs-on: ubuntu-latest  
    needs: matrix  
    strategy:  
      matrix: 
        target: ${{ fromJson(needs.matrix.outputs.matrix) }}
        arch: ${{ fromJSON(github.event.inputs.Arch) }}
      fail-fast: false  

    steps:  
    - name: 检出代码  
      uses: actions/checkout@v4  

    - name: 加载环境  
      env:  
        DEBIAN_FRONTEND: noninteractive  
      run: |  
        sudo apt-get update -qq  
        sudo apt-get install -qq --no-install-recommends \
          build-essential clang llvm flex g++ gawk gcc-multilib gettext \
          git libncurses5-dev libssl-dev python3 python3-pyelftools python3-setuptools \
          rsync unzip zstd zlib1g-dev jq subversion qemu-utils ccache \
          libelf-dev device-tree-compiler libgmp3-dev libmpc-dev  
        sudo apt-get autoremove --purge -qq  
        sudo rm -rf /var/lib/apt/lists/*  
        sudo timedatectl set-timezone "Asia/Shanghai"  
        git clone --depth=1 https://github.com/openwrt-dev/po2lmo  
        (cd po2lmo && sudo make && sudo make install)  

    - name: 设置变量  
      id: ENV  
      run: |  
        echo "date=$(date +'%m.%d')" >> $GITHUB_ENV  
        echo "arch_path=$(echo ${{ matrix.arch }} | tr '/' '-')" >> $GITHUB_ENV
      
    - name: 准备SDK  
      run: |  
        SDK_URL1="https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/targets/${{ matrix.arch }}/immortalwrt-sdk-24.10-SNAPSHOT-${{ env.arch_path }}_gcc-13.3.0_musl.Linux-x86_64.tar.zst"
        SDK_URL2="https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/targets/${{ matrix.arch }}/immortalwrt-sdk-24.10-SNAPSHOT-${{ env.arch_path }}_gcc-13.3.0_musl_eabi.Linux-x86_64.tar.zst"
        wget --spider -q "$SDK_URL1" && wget "$SDK_URL1" || wget "$SDK_URL2"
        mkdir OpenWrt-${{ env.arch_path }} && tar -I 'zstd -d' -xf immortalwrt-*.tar.zst -C OpenWrt-${{ env.arch_path }} --strip-components 1 && rm immortalwrt-*.tar.zst 

    - name: 克隆项目  
      run: |  
        cp -rf App/. OpenWrt/  
        cd OpenWrt  
        ./scripts/feeds update -a && rm -rf feeds/luci/applications/luci-app-*  
        git clone -b lede https://github.com/somemoo/OpenWrt-packages packages && mv -n packages/* package && rm -rf {packages,package/golang}  
        ./scripts/feeds install ${{ matrix.target }}  
        
        # 检查当前目录下是否存在目标文件  
        if [ -f "${{ matrix.target }}" ]; then  
          chmod +x "${{ matrix.target }}"  
          /bin/bash ./"${{ matrix.target }}"  
        else  
          echo "${{ matrix.target }} 文件不存在，无法执行。"  
        fi  
        echo "CONFIG_PACKAGE_${{ matrix.target }}=y" >> .config  
    
    - name: 下载依赖  
      id: package  
      run: |  
        cd OpenWrt  
        make defconfig  
        make -j$(nproc) download   
        
    - name: 开始编译  
      run: |   
        cd OpenWrt  
        make package/${{ matrix.target }}/compile -j$(nproc) V=s  
        
    - name: 准备 ipk  
      run: |  
        cd OpenWrt  
        mkdir -p ./artifact/IPK  
        find ./bin/packages/*/*/ -maxdepth 1 -type f -name "*.ipk" | xargs -i mv -f {} ./artifact/IPK/  
        cd ./artifact/IPK  
        echo "IPK=$PWD" >> $GITHUB_ENV  
        
    - name: 上传 ipk  
      uses: actions/upload-artifact@v4  
      id: upipk  
      with:  
        name: ${{ env.date }} (${{ env.arch_path }})-${{ matrix.target }}  
        path: ${{ env.IPK }}/
