#=================================================  
# https://github.com/somemoo/OpenWrt  
# ÊèèËø∞: ‰ΩøÁî® GitHub Actions ÊûÑÂª∫ OpenWrt  
# ËÆ∏ÂèØËØÅ: MIT  
# ‰ΩúËÄÖ: vison.v   
#=================================================  

name: Openwrt-AutoBuild

on:
  workflow_dispatch:
  schedule:
    - cron: "5 19 1/2 * *"
  watch:
    types: started

permissions:
  contents: read

env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  SCKEY: ${{ secrets.SCKEY }}
  PAT: ${{ secrets.PAT }}
  TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TZ: Asia/Shanghai

jobs:
  build_openwrt:
    if: github.event.repository.owner.id == github.event.sender.id || !github.event.sender.id
    runs-on: ubuntu-latest
    name: ÊûÑÂª∫ ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        target: [lede-x86-64, openwrt-x86-64, immortalwrt-x86-64]

    steps:
      - name: Ê£ÄÂá∫‰ª£Á†Å
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: ÈÖçÁΩÆÂèòÈáè
        run: |
          echo "FILE_NAME=${{ matrix.target }}" >> $GITHUB_ENV
          echo "REPO_NAME=$(basename "${{ matrix.target }}" | awk -F'-' '{print $1}')" >> $GITHUB_ENV
          echo "ARCH_NAME=$(basename "${{ matrix.target }}" | sed -E 's/^[^-]*-//')" >> $GITHUB_ENV
          echo "date=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV

      - name: Âä†ËΩΩÈÖçÁΩÆ
        run: |
          source "${GITHUB_WORKSPACE}/${{ env.REPO_NAME }}/common/settings.ini"
          if [ -f "${GITHUB_WORKSPACE}/${{ env.REPO_NAME }}/${{ env.ARCH_NAME }}/settings.ini" ]; then
            source "${GITHUB_WORKSPACE}/${{ env.REPO_NAME }}/${{ env.ARCH_NAME }}/settings.ini"
          fi
          echo "REPO_URL=${REPO_URL}" >> $GITHUB_ENV
          echo "REPO_BRANCH=${REPO_BRANCH}" >> $GITHUB_ENV
          echo "CONFIG_FILE=${CONFIG_FILE}" >> $GITHUB_ENV
          echo "CUSTOM_SH=${CUSTOM_SH}" >> $GITHUB_ENV
          echo "COMMON_SH=${COMMON_SH}" >> $GITHUB_ENV
          echo "UPLOAD_FIRMWARE_FOR_ARTIFACT=${UPLOAD_FIRMWARE_FOR_ARTIFACT}" >> $GITHUB_ENV
          echo "UPLOAD_EFI_FIRMWARE_FOR_ARTIFACT=${UPLOAD_EFI_FIRMWARE_FOR_ARTIFACT}" >> $GITHUB_ENV
          echo "UPLOAD_FIRMWARE_FOR_RELEASE=${UPLOAD_FIRMWARE_FOR_RELEASE}" >> $GITHUB_ENV

      - name: Âä†ËΩΩÁéØÂ¢É
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          sudo timedatectl set-timezone "Asia/Shanghai"
          sudo apt update
          sudo apt full-upgrade -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
            bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
            git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev \
            libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev \
            libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf npm python3 \
            python3-pyelftools python3-setuptools qemu-utils rename rsync scons squashfs-tools subversion swig texinfo \
            uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo apt -y autoremove --purge
          sudo apt -y clean
          git clone --depth=1 https://github.com/openwrt-dev/po2lmo
          (cd po2lmo && sudo make && sudo make install)
          df -h

      - name: ÂÖãÈöÜ‰ª£Á†Å
        run: |
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH OpenWrt
          rsync -a ${{ env.REPO_NAME }}/{common,${{ env.ARCH_NAME }}}/files/ OpenWrt/ 2>/dev/null || :
          cp -rf ${{ env.REPO_NAME }} OpenWrt/

      - name: Êõ¥Êñ∞feeds
        run: |
          cd OpenWrt
          sed -i "/src-git vi /d; \$a src-git vi https://github.com/somemoo/OpenWrt-packages;${{ env.REPO_NAME }}" feeds.conf.default
          ./scripts/feeds update -a
          chmod +x ${{ env.REPO_NAME }}/common/feeds-vi.sh
          sudo "${{ env.REPO_NAME }}/common/feeds-vi.sh"
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: ‰ºòÂåñÂ≠òÂÇ®
        run: |
          sudo mkdir -p -m 777 /mnt/OpenWrt/dl /mnt/OpenWrt/bin /mnt/OpenWrt/staging_dir /mnt/OpenWrt/build_dir
          ln -sfn /mnt/OpenWrt/dl OpenWrt/dl
          ln -sfn /mnt/OpenWrt/bin OpenWrt/bin
          ln -sfn /mnt/OpenWrt/staging_dir OpenWrt/staging_dir
          ln -sfn /mnt/OpenWrt/build_dir OpenWrt/build_dir

      - name: Â∫îÁî®ÈÖçÁΩÆ
        run: |
          cd OpenWrt
          if [ -f "${{ env.REPO_NAME }}/common/$COMMON_SH" ]; then
            chmod +x ${{ env.REPO_NAME }}/common/$COMMON_SH
            /bin/bash "${{ env.REPO_NAME }}/common/$COMMON_SH"
          fi
          if [ -f "${{ env.REPO_NAME }}/${{ env.ARCH_NAME }}/$CUSTOM_SH" ]; then
            chmod +x ${{ env.REPO_NAME }}/${{ env.ARCH_NAME }}/$CUSTOM_SH
            /bin/bash "${{ env.REPO_NAME }}/${{ env.ARCH_NAME }}/$CUSTOM_SH"
          fi
          mv ${{ env.REPO_NAME }}/common/$CONFIG_FILE .config
          if [ -f "${{ env.REPO_NAME }}/${{ env.ARCH_NAME }}/$CONFIG_FILE" ]; then
            echo >> .config
            cat ${{ env.REPO_NAME }}/${{ env.ARCH_NAME }}/$CONFIG_FILE >> .config
          fi

      - name: Â∫îÁî®Ë°•‰∏Å
        run: |
          cd OpenWrt
          find "${{ env.REPO_NAME }}" -name "*.patch" 2>/dev/null | xargs -I % sh -c 'echo "Â∫îÁî®Ë°•‰∏Å: %" && patch -p1 --no-backup-if-mismatch < % || exit 255'

      - name: ‰∏ãËΩΩ‰æùËµñ
        run: |
          cd OpenWrt
          make defconfig
          make download -j$(nproc)
          df -h

      - name: ÁºñËØëÂõ∫‰ª∂
        id: compile
        continue-on-error: true
        run: |
          set -eo pipefail
          cd OpenWrt
          ERROR_LOG="${{ matrix.target }}_make_error.log"
          FULL_LOG="${{ matrix.target }}_full.log"
          echo "::group::üì¶ Â§öÁ∫øÁ®ãÁºñËØë ${{ matrix.target }}"
          echo "Á∫øÁ®ãÊï∞: $(($(nproc)+1))"
          if {make -j$(($(nproc)+1)) V=s 2>&1 | tee "$FULL_LOG"} | grep -E -A 1 'error:|Collected errors:|Cannot install package|check_data_file_clashes|^\* ' | sed -e '/^--$/d' -e 's/^/‚ñå/' > "$ERROR_LOG"; then
            echo "Â§öÁ∫øÁ®ãÁºñËØëÊàêÂäüÔºÅ"
            rm -f "$FULL_LOG" "$ERROR_LOG" 2>/dev/null
            echo "::endgroup::"
          else
            echo "Â§öÁ∫øÁ®ãÁºñËØëÂ§±Ë¥•ÔºÅ"
            echo "::endgroup::"
            echo "::group::üìù Â§öÁ∫øÁ®ãÈîôËØØÊëòË¶Å"
            echo "‰ª•‰∏ãÊòØÈîôËØØÊëòË¶ÅÔºàÂÆåÊï¥Êó•ÂøóËßÅArtifactsÔºâÔºö"
            tail -n 20 "$ERROR_LOG" | sed 's/^/   /'
            echo "::endgroup::"
            echo "::warning::‚ö†Ô∏è Â§öÁ∫øÁ®ãÁºñËØëÂ§±Ë¥•ÔºåÂ∞ùËØïÂçïÁ∫øÁ®ãÁºñËØë..."
            echo "::group::üê¢ ÂçïÁ∫øÁ®ãÁºñËØë ${{ matrix.target }}"
            if { make -j1 V=s 2>&1 | tee "$FULL_LOG"; } | grep -E -A 1 'error:|Collected errors:|Cannot install package|check_data_file_clashes|^\* ' | sed -e '/^--$/d' -e 's/^/‚ñå/' > "$ERROR_LOG"; then
              echo "ÂçïÁ∫øÁ®ãÁºñËØëÊàêÂäüÔºÅ"
              rm -f "$FULL_LOG" "$ERROR_LOG" 2>/dev/null
              echo "::notice::ÈôçÁ∫ßÁºñËØëÊàêÂäüÔºÅ"
              echo "::endgroup::"
            else
              echo "ÂçïÁ∫øÁ®ãÁºñËØëÂ§±Ë¥•ÔºÅ"
              echo "::endgroup::"
              echo "::group::üìù ÂçïÁ∫øÁ®ãÈîôËØØÊëòË¶Å"
              echo "‰ª•‰∏ãÊòØÈîôËØØÊëòË¶ÅÔºàÂÆåÊï¥Êó•ÂøóËßÅArtifactsÔºâÔºö"
              tail -n 20 "$ERROR_LOG" | sed 's/^/   /'
              echo "::endgroup::"
              echo "::error::‚ùå ÂΩªÂ∫ïÁºñËØëÂ§±Ë¥•ÔºÅÂÆåÊï¥ÈîôËØØÊó•ÂøóËßÅArtifacts"
            fi
          fi
          if [ ! -e "$FULL_LOG" ]; then
            echo "::group::üìä Á©∫Èó¥‰ΩøÁî®ÊÉÖÂÜµ"
            df -hT | grep -v 'tmpfs\|boot'
            echo "::endgroup::"
            echo "::group::‚úÖ ÊûÑÂª∫ÊàêÊûú"
            ls -h bin/targets/*/* || true
            echo "::endgroup::"
          else
            echo "LOG=true" >> $GITHUB_ENV
          fi

      - name: ÁªÑÁªáÊñá‰ª∂
        continue-on-error: true
        id: organize
        run: |
          mkdir -p firmware
          if [ "$LOG" = "true" ]; then
            find OpenWrt/ -maxdepth 1 \( -type f -name "*_full.log" -o -name "*_error.log" \) -exec cp -f {} ./firmware/ \; 2>/dev/null || true
            ls firmware
          else
            find OpenWrt/bin/targets/ \( -type d -name "packages" -o -name "*buildinfo" -o -name "*json" -o -name "*txt" -o -name "*manifest" \) -exec rm -rf {} + 2>/dev/null  
            find OpenWrt/bin/targets/ -type f -exec cp -f {} ./firmware/ \; 2>/dev/null  
            cp OpenWrt/.config  ./firmware/${{matrix.target}}.config  
            cp OpenWrt/${{ env.REPO_NAME }}/release ./firmware    
            cd firmware  
            for file in *; do tar -czf "$file.tar.gz" "$file" && [ -f "$file" ] && rm -f "$file"; done
            tar -xzf sha256sums.tar.gz && tar -xzf release.tar.gz && tar -xzf ${{matrix.target}}.config.tar.gz && rm -f {sha256sums.tar.gz,release.tar.gz,${{matrix.target}}.config.tar.gz}  
            mv sha256sums ${{ matrix.target }}_sha256sums
            [ "$REPO_NAME" = "lede" ] && rename "s/openwrt/$REPO_NAME/" openwrt-*
            echo "FIRMWARE_STATUS=true" >> $GITHUB_ENV
            compgen -G "*efi*" > /dev/null && echo "EFI=true" >> $GITHUB_ENV
            compgen -G "*squashfs*" > /dev/null && echo "COMBINED=true" >> $GITHUB_ENV
            ls
          fi

      - name: ÂèëÂ∏ÉÂõ∫‰ª∂
        uses: softprops/action-gh-release@master
        id: uprelease
        continue-on-error: true
        if: ${{ env.REPO_TOKEN && env.UPLOAD_FIRMWARE_FOR_RELEASE == 'true' && env.FIRMWARE_STATUS == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        with:
          files: firmware/*
          name: ${{ env.date }}-${{ matrix.target }}
          tag_name: ${{ env.date }}-${{ matrix.target }}
          body_path: firmware/release

      - name: ‰∏ä‰º† SQU
        uses: actions/upload-artifact@v4
        continue-on-error: true
        if: ${{ env.UPLOAD_FIRMWARE_FOR_ARTIFACT == 'true' && env.COMBINED == 'true' }}
        with:
          name: ${{ env.date }}-${{ matrix.target }}
          path: |
            firmware/*squashfs*
            !firmware/*efi*
            !firmware/*rootfs*

      - name: ‰∏ä‰º† EFI
        uses: actions/upload-artifact@v4
        continue-on-error: true
        if: ${{ env.UPLOAD_EFI_FIRMWARE_FOR_ARTIFACT == 'true' && env.EFI == 'true' }}
        with:
          name: ${{ env.date }}-${{ matrix.target }}_EFI
          path: |
            firmware/*efi*
            !firmware/*ext4*

      - name: ÈîôËØØÊó•Âøó
        uses: actions/upload-artifact@v4
        continue-on-error: true
        if: ${{ env.LOG == 'true' }}
        with:
          name: ${{ matrix.target }}_full_error
          path: firmware/*_full.log

      - name: Ê∂àÊÅØÈÄöÁü•
        if: always()
        run: |
          if [ "$LOG" = "true" ]; then
            ERROR_LOG=$(tail -n 10 firmware/${{ matrix.target }}_make_error.log)
            MSG_TITLE="‚ùå Âõ∫‰ª∂ ${{ matrix.target }} ÁºñËØëÂ§±Ë¥•"
            MSG_CONTENT="------------------------  
            üìÖÁºñËØëÊó•ÊúüÔºö${{ env.date }}  
            üìùÈîôËØØÊó•ÂøóÔºö  
            <pre>${ERROR_LOG}</pre>  
            üìùÊü•ÁúãÂÆåÊï¥Êó•ÂøóËØ∑‰∏ãËΩΩArtifacts"
            WSG_CONTENT="------------------------  
            üìÖÁºñËØëÊó•ÊúüÔºö${{ env.date }}  
            üìùÈîôËØØÊó•ÂøóÔºö  
            ${ERROR_LOG}  
            üìùÊü•ÁúãÂÆåÊï¥Êó•ÂøóËØ∑‰∏ãËΩΩArtifacts"
          else
            MSG_TITLE="‚úÖ Âõ∫‰ª∂ ${{ matrix.target }} ÁºñËØëÂÆåÊàê"
            MSG_CONTENT="------------------------  
            üìÖÁºñËØëÊó•ÊúüÔºö${{ env.date }}  
            üîßÁîüÊàêÁõÆÊ†áÔºö${{ matrix.target }}  
            üì•‰∏ãËΩΩÂú∞ÂùÄÔºö<a href="https://github.com/somemoo/OpenWrt/releases/download/${{ env.date }}-${{ matrix.target }}/${{ matrix.target }}-generic-squashfs-combined.img.tar.gz">${{ matrix.target }}-generic-squashfs-combined.img.tar.gz</a>"
            WSG_CONTENT="------------------------  
            üìÖÁºñËØëÊó•ÊúüÔºö${{ env.date }}  
            üîßÁîüÊàêÁõÆÊ†áÔºö${{ matrix.target }}  
            üì•‰∏ãËΩΩÂú∞ÂùÄÔºö[${{ matrix.target }}-generic-squashfs-combined.img.tar.gz](https://github.com/somemoo/OpenWrt/releases/download/${{ env.date }}-${{ matrix.target }}/${{ matrix.target }}-generic-squashfs-combined.img.tar.gz)"
          fi

          if [ -n "$SCKEY" ]; then
            curl -X POST \
              --data-urlencode "key=${{ secrets.SCKEY }}" \
              --data-urlencode "title=${MSG_TITLE}" \
              --data-urlencode "desp=${WSG_CONTENT}" \
              "https://sctapi.ftqq.com/${{ secrets.SCKEY }}.send"
          fi

          if [ -n "$TELEGRAM_TOKEN" ]; then
            curl -s -k \
              --data-urlencode "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
              --data-urlencode "text=<b>${MSG_TITLE}</b>  
              ${MSG_CONTENT}" \
              --data-urlencode "parse_mode=HTML" \
              --data-urlencode "disable_web_page_preview=true" \
              "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage"
          fi

      - name: Âà†Èô§ËÆ∞ÂΩï
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.PAT }}
          retain_days: 2
          keep_minimum_runs: 1

      - name: Âà†Èô§ÂèëÂ∏É
        uses: dev-drprasad/delete-older-releases@master
        continue-on-error: true
        if: ${{ env.UPLOAD_FIRMWARE_FOR_RELEASE == 'true' }}
        with:
          keep_latest: 15
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
